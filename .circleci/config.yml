version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run:
          name: build plugin
          command: mvn clean install
      - run:
          name: move plugin
          command: |
            mkdir /tmp/plugin
            cp target/ghost-inspector.hpi /tmp/plugin/
      - persist_to_workspace:
          root: /tmp/plugin/
          paths: 
            - ghost-inspector.hpi

  test:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - attach_workspace:
          at: /tmp/plugin/

      - setup_remote_docker
      - checkout

      - run:
          name: debug
          command: |
            ls
            pwd

      - run:
          name: swap in the test secrets
          command: |
            sed -i "s/{{APIKEY}}/$APIKEY/g" ./jenkins_home/jobs/*/config.xml
            sed -i "s/{{SUITEID}}/$SUITEID/g" ./jenkins_home/jobs/*/config.xml

      - run:
          name: copy new ghost inspector plugin to jenkins_home
          command: cp /tmp/plugin/ghost-inspector.hpi ./jenkins_home/plugins/

      # - spin up jenkins server with jenkins_home
      - run:
          name: fire up jenkins container
          command: |
            docker network create temp-network
            docker run -d \
              -p 8080:8080 \
              -v jenkins_home:/var/jenkins_home \
              --network temp-network \
              --name jenkins \
              jenkins/jenkins:lts
      - run:
          name: pause to let jenkins load
          command: sleep 60
      
      # fire up a second jenkins and run the script
      - run:
          name: fire up jenkins container
          command: |
            docker run \
              -v jenkins_home:/var/jenkins_home \
              -v scripts:/tmp/scripts \
              -e JOB='standard-test' \
              --network temp-network \
              --name jenkins-runner \
              --entrypoint "/bin/bash" \
              jenkins/jenkins:lts /bin/bash /tmp/scripts/test-plugin.sh


      # - run:
      #     name: run standard build job
      #     command: ./scripts/test-plugin standard-test
      # - run:
      #     name: run pipeline build job
      #     command: ./scripts/test-plugin pipeline-test
        

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build